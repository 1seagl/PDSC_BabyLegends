/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const OverallLazyImport = createFileRoute('/overall')()

// Create/Update Routes

const OverallLazyRoute = OverallLazyImport.update({
  id: '/overall',
  path: '/overall',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/overall.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/overall': {
      id: '/overall'
      path: '/overall'
      fullPath: '/overall'
      preLoaderRoute: typeof OverallLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/overall': typeof OverallLazyRoute
}

export interface FileRoutesByTo {
  '/overall': typeof OverallLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/overall': typeof OverallLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/overall'
  fileRoutesByTo: FileRoutesByTo
  to: '/overall'
  id: '__root__' | '/overall'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  OverallLazyRoute: typeof OverallLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  OverallLazyRoute: OverallLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/overall"
      ]
    },
    "/overall": {
      "filePath": "overall.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
